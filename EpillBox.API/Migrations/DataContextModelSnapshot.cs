// <auto-generated />
using System;
using EpillBox.API.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace EpillBox.API.Migrations
{
    [DbContext(typeof(DataContext))]
    partial class DataContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.6-servicing-10079");

            modelBuilder.Entity("EpillBox.API.Models.Alergic", b =>
                {
                    b.Property<int>("IdAlergic")
                        .ValueGeneratedOnAdd();

                    b.Property<int?>("UserIdUser");

                    b.Property<string>("substanceName");

                    b.HasKey("IdAlergic");

                    b.HasIndex("UserIdUser");

                    b.ToTable("Alergics");
                });

            modelBuilder.Entity("EpillBox.API.Models.Category", b =>
                {
                    b.Property<int>("IdCategory")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Name");

                    b.HasKey("IdCategory");

                    b.ToTable("Categories");
                });

            modelBuilder.Entity("EpillBox.API.Models.Composition", b =>
                {
                    b.Property<int>("IdComposition")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Name");

                    b.HasKey("IdComposition");

                    b.ToTable("Compositions");
                });

            modelBuilder.Entity("EpillBox.API.Models.FirstAidKit", b =>
                {
                    b.Property<int>("IdMedicine");

                    b.Property<int>("IdUser");

                    b.Property<DateTime>("ExpirationDate");

                    b.Property<bool>("IsAlergicTo");

                    b.Property<bool>("IsTaken");

                    b.Property<int>("remainingQuantity");

                    b.HasKey("IdMedicine", "IdUser");

                    b.HasIndex("IdUser");

                    b.ToTable("FirstAidKits");
                });

            modelBuilder.Entity("EpillBox.API.Models.Form", b =>
                {
                    b.Property<int>("IdForm")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Name");

                    b.HasKey("IdForm");

                    b.ToTable("Forms");
                });

            modelBuilder.Entity("EpillBox.API.Models.Medicine", b =>
                {
                    b.Property<int>("IdMedicine")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Effect");

                    b.Property<int?>("FormIdForm");

                    b.Property<int?>("ProducerIdProducer");

                    b.Property<int>("Quantity");

                    b.HasKey("IdMedicine");

                    b.HasIndex("FormIdForm");

                    b.HasIndex("ProducerIdProducer");

                    b.ToTable("Medicines");
                });

            modelBuilder.Entity("EpillBox.API.Models.MedicineCategory", b =>
                {
                    b.Property<int>("IdMedicine");

                    b.Property<int>("IdCategory");

                    b.HasKey("IdMedicine", "IdCategory");

                    b.HasIndex("IdCategory");

                    b.ToTable("MedicineCategories");
                });

            modelBuilder.Entity("EpillBox.API.Models.MedicineComposition", b =>
                {
                    b.Property<int>("IdMedicine");

                    b.Property<int>("IdComposition");

                    b.HasKey("IdMedicine", "IdComposition");

                    b.HasIndex("IdComposition");

                    b.ToTable("MedicineCompositions");
                });

            modelBuilder.Entity("EpillBox.API.Models.Producer", b =>
                {
                    b.Property<int>("IdProducer")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Address");

                    b.Property<string>("Name");

                    b.HasKey("IdProducer");

                    b.ToTable("Producers");
                });

            modelBuilder.Entity("EpillBox.API.Models.User", b =>
                {
                    b.Property<int>("IdUser")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Email");

                    b.Property<string>("Login");

                    b.Property<string>("Name");

                    b.Property<string>("Password");

                    b.Property<string>("Surname");

                    b.HasKey("IdUser");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("EpillBox.API.Models.Alergic", b =>
                {
                    b.HasOne("EpillBox.API.Models.User", "User")
                        .WithMany("Alergics")
                        .HasForeignKey("UserIdUser");
                });

            modelBuilder.Entity("EpillBox.API.Models.FirstAidKit", b =>
                {
                    b.HasOne("EpillBox.API.Models.Medicine", "Medicine")
                        .WithMany("FirstAidKit")
                        .HasForeignKey("IdMedicine")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("EpillBox.API.Models.User", "User")
                        .WithMany("FirstAidKit")
                        .HasForeignKey("IdUser")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("EpillBox.API.Models.Medicine", b =>
                {
                    b.HasOne("EpillBox.API.Models.Form", "Form")
                        .WithMany("Medicines")
                        .HasForeignKey("FormIdForm");

                    b.HasOne("EpillBox.API.Models.Producer", "Producer")
                        .WithMany("Medicines")
                        .HasForeignKey("ProducerIdProducer");
                });

            modelBuilder.Entity("EpillBox.API.Models.MedicineCategory", b =>
                {
                    b.HasOne("EpillBox.API.Models.Category", "Category")
                        .WithMany("MedicineCategories")
                        .HasForeignKey("IdCategory")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("EpillBox.API.Models.Medicine", "Medicine")
                        .WithMany("MedicineCategory")
                        .HasForeignKey("IdMedicine")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("EpillBox.API.Models.MedicineComposition", b =>
                {
                    b.HasOne("EpillBox.API.Models.Composition", "Composition")
                        .WithMany("MedicineCompositions")
                        .HasForeignKey("IdComposition")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("EpillBox.API.Models.Medicine", "Medicine")
                        .WithMany("MedicineCompositions")
                        .HasForeignKey("IdMedicine")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
